{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","newReview","title","text","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\n\nimport {authenticate} from '../middleware/authMiddleware';\n // add \"authenticate,\" to any route to secure it\n\nexport default({config,db}) => {\n let api = Router();\n \n // ADD /v1/foodtruck/add\n\n api.post('/add',(req,res) => {\n     let newFoodTruck = new FoodTruck();\n     newFoodTruck.name = req.body.name;\n     newFoodTruck.foodtype = req.body.foodtype;\n     newFoodTruck.avgcost = req.body.avgcost;\n     newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n     \n     newFoodTruck.save(err => {\n       if(err){\n           res.send(err);\n       }\n       \n        res.json({message: \"FoodTruck saved successfully.\"});\n        \n     });\n });\n \n // FIND ALL /v1/foodtruck/\n api.get('/',(req,res) => { \n     FoodTruck.find({},(err,foodtrucks) => {\n         if(err){\n             res.send(err);\n         }\n         \n        res.json(foodtrucks);\n         \n     })\n });\n \n // FIND ONE /v1/foodtruck/:id\n api.get('/:id',(req,res) => {\n    FoodTruck.findById(req.params.id,(err, foodtruck) => {\n        if(err){\n             res.send(err);\n         }\n         \n        res.json(foodtruck);\n    }); \n });\n \n // UPDATE /v1/foodtruck/:id\n api.put('/:id',(req,res) => {\n     FoodTruck.findById(req.params.id,(err, foodtruck) => {\n         if(err){\n             res.send(err);\n         }\n         \n         foodtruck.name = req.body.name;\n         foodtruck.foodtype = req.body.foodtype;\n         foodtruck.avgcost = req.body.avgcost;\n         foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n         \n         foodtruck.save(err => {\n             if(err){\n                 res.send(err);\n             }\n             res.json({message: 'FoodTruck updated successfully.'});\n         });\n     });\n });\n \n  // DELETE /v1/foodtruck/:id\n api.delete('/:id',(req,res) => {\n    FoodTruck.remove({\n        _id: req.params.id\n    }, (err, foodtruck) =>{\n        if(err){\n            res.send(err);\n        }\n        res.json({message: 'FoodTruck removed successfully.'});\n    });\n });\n \n // ADD /v1/foodtruck/reviews/add\n api.post('/reviews/:id',(req,res) => {\n     // find foodtruck to add the review to\n     FoodTruck.findById(req.params.id,(err,foodtruck) => {\n        if(err){\n            res.send(err);\n        }\n        // create new instance of review\n        let newReview = new Review();\n        // fill it with review data from req\n        newReview.title = req.body.title;\n        newReview.text = req.body.text;\n        newReview.foodtruck = foodtruck._id;\n        // save review\n        newReview.save((err,review) => {\n            if(err){\n                res.send(err);\n            }\n             // push review to foodtruck's review array\n            foodtruck.reviews.push(newReview);\n            // save foodtruck with new review\n            foodtruck.save(err => {\n                if(err){\n                    res.send(err);\n                } \n                res.json({message: 'Food truck review saved.'});\n            });\n        });\n     });\n });\n \n // FIND REVIEWS\n api.get('/reviews/:id', (req,res) => {\n    Review.find({foodtruck: req.params.id},(err, reviews) => {\n        if(err){\n            res.send(err);\n        }\n        res.json(reviews);\n    });\n });\n \n return api;\n}"]}